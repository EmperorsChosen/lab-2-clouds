name: CI/CD Pipeline for Flask AWS Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest

    steps:
      # 1. Клонування репозиторію
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Налаштування AWS CLI (використовує готовий action)
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      # 4. Деплой CloudFormation для створення інфраструктури
      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file cloudformation/cloudformation.yml \
            --stack-name flask-app-stack \
            --capabilities CAPABILITY_NAMED_IAM

      # 5. Отримання Public IP EC2-інстансу за тегом
      - name: Get EC2 Public IP
        id: ec2_ip
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=flask-app-instance" "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "EC2 Public IP: $PUBLIC_IP"
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      # 6. Підключення до EC2 та перевірка сервісів
      - name: Deploy Application on EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ env.PUBLIC_IP }} << 'EOF'
            echo "Connecting to EC2 instance..."
            cd /home/ubuntu/lab-2-clouds
            git pull
            echo "Project updated!"
            ps aux | grep python
            echo "Deployment complete!"
          EOF
